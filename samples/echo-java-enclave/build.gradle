import com.r3.sgx.plugin.enclave.SignEnclave

plugins {
    id 'java'
    id 'com.r3.sgx.enclave'
}

repositories {
    jcenter()
}

dependencies {
    implementation "com.r3.sgx:api-core-enclave"

    testImplementation "junit:junit:$junit_version"
    testImplementation "com.r3.sgx:api-core-host"
    testImplementation "com.r3.sgx:enclave-testing"
    testRuntimeOnly "com.r3.sgx:native-host-${sgxMode.toLowerCase()}"
}

shadowJar {
    archiveBaseName = "echo-java-enclave"
    archiveClassifier = ''
    zip64 = true
    
    manifest {
        attributes("Enclave-Class": "com.r3.sgx.enclave.jecho.EchoEnclave")
    }
}

jar {
    archiveClassifier = 'ignore'
}

test {
    def signEnclaveTask = (SignEnclave) tasks.getByPath(":echo-enclave:signEnclaveWithDummyKey$sgxMode")
    dependsOn signEnclaveTask
    systemProperty("com.r3.sgx.enclave.path", signEnclaveTask.signedEnclavePath)
}
