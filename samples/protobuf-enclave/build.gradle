plugins {
    id 'com.google.protobuf'
    id 'org.jetbrains.kotlin.jvm'
    id 'com.r3.sgx.enclave'
}

repositories {
    jcenter()
}

dependencies {
    implementation "com.r3.sgx:api-core-enclave"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "com.google.protobuf:protobuf-java:$protobuf_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "com.r3.sgx:api-core-host"
    testImplementation "com.r3.sgx:enclave-testing"

    testRuntimeOnly "com.r3.sgx:native-host-${sgxMode.toLowerCase()}"
}

shadowJar {
    archiveBaseName = 'example-enclave'
    archiveClassifier = ''
    zip64 = true
}

jar {
    archiveClassifier = 'ignore'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobuf_version"
    }
    generateProtoTasks.generatedFilesBaseDir = "$projectDir/src/"
    generateProtoTasks {
        all().each { task ->
            task.inputs.dir("$projectDir/src/main/proto")
            task.builtins {
                java { }
            }
        }
    }
}

test {
    def signEnclaveTask = tasks.getByPath(":protobuf-enclave:buildSignedEnclave$sgxMode")
    dependsOn signEnclaveTask
    systemProperty("com.r3.sgx.enclave.path", signEnclaveTask.signedEnclavePath)
}
