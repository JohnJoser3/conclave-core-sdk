plugins {
    id 'com.r3.conclave.enclave' apply false
    id "com.github.ben-manes.versions" version "0.27.0"
}

apply from: '../versions.gradle'
apply from: '../common.gradle'

def modulesToSubstitute = [
        'com.r3.conclave:native-host-simulation',
        'com.r3.conclave:native-host-debug',
        'com.r3.conclave:native-host-release',
        'com.r3.conclave:native-host-shared',
        'com.r3.conclave:native-gdb',
        'com.r3.conclave:native-sign-tool',
        'com.r3.conclave:native-binutils',
        'com.r3.conclave:conclave-common',
        'com.r3.conclave:conclave-enclave',
        'com.r3.conclave:conclave-host',
        'com.r3.conclave:conclave-client',
        'com.r3.conclave:internal-testing'
]

subprojects {
    def enclaveMode = findProperty("enclaveMode")?.toString()?.toLowerCase() ?: "simulation"

    repositories {
        mavenCentral()
        jcenter()
        switch (System.getenv('USE_MAVEN_REPO')?.toLowerCase()) {
            case "artifactory":
                maven {
                    url = "https://software.r3.com/artifactory/sgxjvm"
                    credentials {
                        username = System.getenv('OBLIVIUM_MAVEN_USERNAME')
                        password = System.getenv('OBLIVIUM_MAVEN_PASSWORD')
                    }
                }
                break
            case "sdk":
                maven {
                    url = "${rootProject.projectDir}/../build/repo"
                }
        }
    }

    tasks.withType(Test) {
        reports.junitXml.destination = file("$buildDir/$enclaveMode/test-results/test")
        reports.html.destination = file("$buildDir/$enclaveMode/test-results/html")
    }

    configurations {
        if (System.getenv('USE_MAVEN_REPO') != null) {
            all {
                for (submodule in modulesToSubstitute) {
                    resolutionStrategy.dependencySubstitution {
                        substitute module(submodule) with module("$submodule:$version")
                    }
                }
            }
        }
    }
}
