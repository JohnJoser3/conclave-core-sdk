plugins {
    id 'com.r3.conclave.enclave' apply false
    id "com.github.ben-manes.versions" version "0.27.0"
}

apply from: '../versions.gradle'
apply from: '../common.gradle'

def modulesToSubstitute = [
        'com.r3.conclave:native-enclave-simulation',
        'com.r3.conclave:native-enclave-debug',
        'com.r3.conclave:native-enclave-release',
        'com.r3.conclave:native-host-simulation',
        'com.r3.conclave:native-host-debug',
        'com.r3.conclave:native-host-release',
        'com.r3.conclave:native-host-shared',
        'com.r3.conclave:native-gdb',
        'com.r3.conclave:native-sign-tool',
        'com.r3.conclave:native-binutils',
        'com.r3.conclave:conclave-common',
        'com.r3.conclave:conclave-enclave',
        'com.r3.conclave:conclave-host',
        'com.r3.conclave:conclave-client',
        'com.r3.conclave:conclave-testing',
        'com.r3.conclave:enclave-utils',
        'com.r3.conclave:internal-testing'
]

def sgxModeProperty = project.property('sgx_mode')
subprojects {
    ext {
        sgxMode = sgxModeProperty
    }

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url = "https://software.r3.com/artifactory/sgxjvm"
            credentials {
                username = System.getenv('OBLIVIUM_MAVEN_USERNAME')
                password = System.getenv('OBLIVIUM_MAVEN_PASSWORD')
            }
        }
    }

    tasks.withType(Test) {
        systemProperty 'sgx.mode', sgxModeProperty
        reports.junitXml.destination = file("$buildDir/$sgxModeProperty/test-results/test")
        reports.html.destination = file("$buildDir/$sgxModeProperty/test-results/html")
    }

    configurations {
        def version = System.getenv('PROJECT_VERSION')
        if (version != null) {
            if (version.empty) {
                version = default_conclave_version
            }
            all {
                for (submodule in modulesToSubstitute) {
                    resolutionStrategy.dependencySubstitution {
                        substitute module(submodule) with module("$submodule:$version")
                    }
                }
            }
        }
    }
}
