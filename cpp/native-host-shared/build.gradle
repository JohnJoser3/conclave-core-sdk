plugins {
    id 'org.jetbrains.kotlin.jvm'
}

dependencies {
    testImplementation project(":internal-testing")
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation "org.junit.jupiter:junit-jupiter:$junit_jupiter_version"
    testImplementation "org.assertj:assertj-core:$assertj_version"
}

test {
    dependsOn ':cpp:native-host-shared:jar'
    doFirst {
        systemProperty 'jar.path', tasks.getByPath(':cpp:native-host-shared:jar').outputs.files.asPath
    }
}

String cmakeBuildType = project.hasProperty("nativeDebug") ? "Debug" : "Release"
String cppBuildDir = "${project(":cpp").buildDir}/$cmakeBuildType"

jar {
    dependsOn(":cpp:compileLinuxSgx$cmakeBuildType")
    dependsOn(":cpp:compileHostShared$cmakeBuildType")
    String linuxSgxBuildDir = "$cppBuildDir/linux-sgx/src/linux-sgx/build/linux"
    String hostSharedBuildDir = "$cppBuildDir/jvm-host-shared"
    into "com/r3/conclave/host-libraries/shared", {
        from (linuxSgxBuildDir) {
            include "libsgx_capable.so"
        }
        from (hostSharedBuildDir) {
            include "libjvm_host_shared.so"
        }
    }
}
