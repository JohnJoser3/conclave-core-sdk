#include <mbusafecrt.h>
#include "jvm_t.h"

/*
 * This library (along with the other libraries required by the enclave) are all built into
 * a partial enclave that is finally linked when the enclave is built. This can result in
 * functions being discarded by the linker that may ultimately be required by the final
 * enclave file. The static function below is used to add a reference to the functions
 * required by this module in the code generated by the edl file - these functions are
 * only called by the final enclave and are therefore discarded.
 * 
 * Note that at the moment this is only relevant when building a release build of the 
 * enclave as debug builds include debug_print() in the edl which is called by other
 * static libraries in the partial enclave resulting in the dependent functions not
 * being discarded.
 * 
 * This function is never actually called.
 */
static __attribute__((used)) void keep_functions() {
    memcpy_s(0, 0, 0, 0);
}

extern "C" {

/*
 * In release enclaves we provide an empty implementation of this function to prevent
 * debug messages from propagating outside the enclave. In debug/simulation enclaves
 * this function is emplemented in jvm_debug.edl and results in an ocall allowing the
 * host to log debug messages.
 */
void debug_print_enclave(const char* msg, int length) {
#if !defined(NO_ENCLAVE_PRINT)
    debug_print(msg, length);
#endif
}

}
