enclave {
    from "start_thread.edl" import *;
    from "sgx_pthread.edl" import *;
    trusted {
        public void jvm_ecall(
            [in, size=bufferInLen] void* bufferIn,
            int bufferInLen
        );
        public void ecall_initialise_enclave(
            [in, out, size=initStructLen] void* initStruct,
            int initStructLen
        );
        public void ecall_finalize_enclave(void);
    };

    untrusted {
        void jvm_ocall_heap(
            [user_check] void* bufferIn,
            int bufferInLen
        ) allow(jvm_ecall);

        void jvm_ocall_stack(
            [in, size=bufferInLen] void* bufferIn,
            int bufferInLen
        ) allow(jvm_ecall);

        void shared_data_ocall(
            [out] void** sharedBufferAddr
        );

        void allocate_untrusted_memory(
            [out] void** bufferPointer,
            int bufferLength
        );

        void free_untrusted_memory(
            [in] void** buffer
        );

        void host_encrypted_read_ocall(					     
	    [out] int* res,
	    unsigned char drive,
	    unsigned long sector_id,
            unsigned char num_sectors,
	    unsigned int sector_size,
	    [out, size=buf_size] unsigned char* buf,
            unsigned int buf_size
	);
	     
        void host_encrypted_write_ocall( 
	    [out] int* res,
	    unsigned char drive,
	    [in, size=buf_size] const unsigned char* buf,
	    unsigned int buf_size,
 	    unsigned int num_writes,
 	    unsigned int element_size,
	    [in, size=indices_buf_size] const unsigned long* indices,
	    unsigned int indices_buf_size
	);

        void host_disk_get_size_ocall( 
	    [out] long* res,
	    unsigned char drive
	);
    };
};
