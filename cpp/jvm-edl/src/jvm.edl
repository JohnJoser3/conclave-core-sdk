enclave {
    from "start_thread.edl" import *;
    from "sgx_pthread.edl" import *;
    trusted {
        public void jvm_ecall(
            [in, size=bufferInLen] void* bufferIn,
            int bufferInLen
        );
        public void ecall_initialise_enclave(
            [in, out, size=initStructLen] void* initStruct,
            int initStructLen
        );
        public void ecall_finalize_enclave(void);
    };

    untrusted {
        void jvm_ocall_heap(
            [user_check] void* bufferIn,
            int bufferInLen
        ) allow(jvm_ecall);

        void jvm_ocall_stack(
            [in, size=bufferInLen] void* bufferIn,
            int bufferInLen
        ) allow(jvm_ecall);

        void shared_data_ocall(
            [out] void** sharedBufferAddr
        );

        void allocate_untrusted_memory(
            [out] void** bufferPointer,
            int bufferLength
        );

        void free_untrusted_memory(
            [in] void** buffer
        );
    };
};
