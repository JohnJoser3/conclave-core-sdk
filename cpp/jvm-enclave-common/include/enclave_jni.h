/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_r3_conclave_enclave_internal_Native */

#ifndef _Included_com_r3_conclave_enclave_internal_Native
#define _Included_com_r3_conclave_enclave_internal_Native
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_r3_conclave_enclave_internal_Native
 * Method:    readAppJarChunk
 * Signature: (J[BII)I
 */
JNIEXPORT jint JNICALL Java_com_r3_conclave_enclave_internal_Native_readAppJarChunk
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jint);

/*
 * Class:     com_r3_conclave_enclave_internal_Native
 * Method:    jvmOcall
 * Signature: ([B)V
 */
JNIEXPORT void JNICALL Java_com_r3_conclave_enclave_internal_Native_jvmOcall
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     com_r3_conclave_enclave_internal_Native
 * Method:    createReport
 * Signature: ([B[B[B)V
 */
JNIEXPORT void JNICALL Java_com_r3_conclave_enclave_internal_Native_createReport
  (JNIEnv *, jobject, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     com_r3_conclave_enclave_internal_Native
 * Method:    getRandomBytes
 * Signature: ([BII)V
 */
JNIEXPORT void JNICALL Java_com_r3_conclave_enclave_internal_Native_getRandomBytes
  (JNIEnv *, jobject, jbyteArray, jint, jint);

/*
 * Class:     com_r3_conclave_enclave_internal_Native
 * Method:    isEnclaveSimulation
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_r3_conclave_enclave_internal_Native_isEnclaveSimulation
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
