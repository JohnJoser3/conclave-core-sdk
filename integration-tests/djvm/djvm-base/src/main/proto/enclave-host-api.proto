syntax = "proto2";

option java_multiple_files = true;
option java_package = "com.r3.conclave.integrationtests.djvm.base.enclave.proto";

message Request {
    oneof requests {
        SendJar send_jar = 1;
        ClearJars clear_jars = 2;
        ExecuteTest execute_test = 3;
        BytecodeRequest bytecode_request = 4;
    }
}

/**
 * Send a new jar to the enclave.
 */
message SendJar {
    /**
     * A byte array representation of the jar file
     */
    required bytes data = 1;
}

/** Causes the enclave to clear its jar storage */
message ClearJars {

}

/**
 * Execute test in the enclave
 */
message ExecuteTest {
    enum Mode {
        /**
         * The test will run in the enclave as normal.
         */
        STANDARD = 0;
        /**
         * The enclave will setup the sandbox environment and then execute the test code inside the sandbox.
         */
        SANDBOX = 1;
        /**
         * This is for tests ported from the DJVM project. These tests manually invoke the sandbox directly, so they only
         * require the enclave to setup the sandbox environment.
         */
        JUST_SETUP_SANDBOX = 2;
    }

    /**
     * The mode the test is to be run in.
     */
    required Mode mode = 1;
    /**
     * The test class name to be executed in the enclave
     */
    required string className = 2;
    /**
     * Optional serialized test input
     */
    optional bytes input = 3;
}

/**
 * Request the sandboxed byte code for a class
 */
message BytecodeRequest {
    /**
     * Class name for which to obtain the sandboxed bytecode
     */
    required string className = 1;
}

/**
 * Test result to be asserted by the host
 */
message TestResult {
    /**
     * Serialized test result
     */
    required bytes result = 1;
}

/**
 * The sandboxed byte code result
 */
message BytecodeResult {
    /**
     * The class name for which the byte code is being returned
     */
    required string className = 1;
    /**
     * The byte array representing the byte code
     */
    required bytes bytecode = 2;
}
