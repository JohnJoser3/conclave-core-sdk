pluginManagement {
    apply from: 'versions.gradle'

    repositories {
        maven {
            url "file://opt/dokka/repository"
        }
        gradlePluginPortal()
    }


    resolutionStrategy {
        eachPlugin {
            if (requested.id.id == 'org.jetbrains.kotlin.jvm' || requested.id.id == 'org.jetbrains.kotlin.plugin.serialization') {
                useVersion kotlin_version
            }
        }
    }
}

rootProject.name = "sgxjvm"

def includeNative = true
try {
    if (excludeNative) {
        includeNative = false
    }
} catch (MissingPropertyException ignored) {
}

if (includeNative) {
    include 'cpp'
    include 'cpp:jvm-enclave-common'
    include 'cpp:native-host'
    include 'cpp:native-host:native-host-simulation'
    include 'cpp:native-host:native-host-debug'
    include 'cpp:native-host:native-host-release'
    include 'cpp:native-host-shared'
    include 'cpp:native-enclave:native-enclave-simulation'
    include 'cpp:native-enclave:native-enclave-debug'
    include 'cpp:native-enclave:native-enclave-release'
    include 'cpp:native-sign-tool'
    include 'cpp:native-gdb'
    include 'cpp:native-binutils'
    include 'cpp:native-substratevm'
    include 'cpp:native-substratevm:native-substratevm-simulation'
    include 'cpp:native-substratevm:native-substratevm-debug'
    include 'cpp:native-substratevm:native-substratevm-release'
    include 'cpp:linux-sgx'
    include 'cpp:linux-sgx:linux-sgx-simulation'
    include 'cpp:linux-sgx:linux-sgx-debug'
    include 'cpp:linux-sgx:linux-sgx-release'
    include 'cpp:macos-binutils'
    include 'cpp:macos-sign-tool'
}

include 'conclave-mail'
include 'conclave-common'
include 'conclave-enclave'
include 'conclave-host'
include 'conclave-web-host'
include 'conclave-client'
include 'conclave-web-client'

include 'conclave-init'

include 'internal-testing'

include 'containers:conclave-build'

include 'hsm-tool'

include 'plugin-enclave-gradle'

include 'graal'
include 'graal:cap-cache'
