plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'com.github.johnrengelman.shadow'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation project(':enclavelet-host:enclavelet-host-common')
    implementation project(':conclave-host')
    implementation project(':api-core:api-core-host')

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.slf4j:jcl-over-slf4j:$slf4j_version"
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jackson_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
    implementation "info.picocli:picocli:$picocli_version"

    runtimeOnly "io.grpc:grpc-netty:$grpc_version"

    testImplementation project(':api-core:api-core-enclave')
    testImplementation project(':enclavelet-host:enclavelet-host-client')
    testImplementation project(':enclave-dynamic-testing')
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.assertj:assertj-core:$assertj_version"
    testImplementation "io.grpc:grpc-testing:$grpc_version"
}

shadowJar {
    archiveBaseName = 'enclavelet-host'
    manifest {
        attributes("Main-Class": "com.r3.sgx.enclavelethost.server.EnclaveletHostCli")
    }
    zip64 true
}

def shadowJarTask = tasks.getByPath(':enclavelet-host:enclavelet-host-server:shadowJar')

test {
    testLogging.showStandardStreams = true
    dependsOn shadowJarTask
    systemProperty "test.hostjar", shadowJar.getArchiveFile().get().toString()
}
