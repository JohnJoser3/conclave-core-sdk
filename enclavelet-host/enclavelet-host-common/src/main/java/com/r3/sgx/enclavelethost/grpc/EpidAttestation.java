// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enclavelet-host.proto

package com.r3.sgx.enclavelethost.grpc;

/**
 * Protobuf type {@code proto.EpidAttestation}
 */
public  final class EpidAttestation extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:proto.EpidAttestation)
    EpidAttestationOrBuilder {
private static final long serialVersionUID = 0L;
  // Use EpidAttestation.newBuilder() to construct.
  private EpidAttestation(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private EpidAttestation() {
    iasResponse_ = com.google.protobuf.ByteString.EMPTY;
    iasCertificate_ = "";
    iasSignature_ = com.google.protobuf.ByteString.EMPTY;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private EpidAttestation(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            bitField0_ |= 0x00000001;
            iasResponse_ = input.readBytes();
            break;
          }
          case 18: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000002;
            iasCertificate_ = bs;
            break;
          }
          case 26: {
            bitField0_ |= 0x00000004;
            iasSignature_ = input.readBytes();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.r3.sgx.enclavelethost.grpc.EnclaveletHostApi.internal_static_proto_EpidAttestation_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.r3.sgx.enclavelethost.grpc.EnclaveletHostApi.internal_static_proto_EpidAttestation_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.r3.sgx.enclavelethost.grpc.EpidAttestation.class, com.r3.sgx.enclavelethost.grpc.EpidAttestation.Builder.class);
  }

  private int bitField0_;
  public static final int IAS_RESPONSE_FIELD_NUMBER = 1;
  private com.google.protobuf.ByteString iasResponse_;
  /**
   * <code>required bytes ias_response = 1;</code>
   */
  public boolean hasIasResponse() {
    return ((bitField0_ & 0x00000001) == 0x00000001);
  }
  /**
   * <code>required bytes ias_response = 1;</code>
   */
  public com.google.protobuf.ByteString getIasResponse() {
    return iasResponse_;
  }

  public static final int IAS_CERTIFICATE_FIELD_NUMBER = 2;
  private volatile java.lang.Object iasCertificate_;
  /**
   * <code>required string ias_certificate = 2;</code>
   */
  public boolean hasIasCertificate() {
    return ((bitField0_ & 0x00000002) == 0x00000002);
  }
  /**
   * <code>required string ias_certificate = 2;</code>
   */
  public java.lang.String getIasCertificate() {
    java.lang.Object ref = iasCertificate_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      if (bs.isValidUtf8()) {
        iasCertificate_ = s;
      }
      return s;
    }
  }
  /**
   * <code>required string ias_certificate = 2;</code>
   */
  public com.google.protobuf.ByteString
      getIasCertificateBytes() {
    java.lang.Object ref = iasCertificate_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      iasCertificate_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int IAS_SIGNATURE_FIELD_NUMBER = 3;
  private com.google.protobuf.ByteString iasSignature_;
  /**
   * <code>required bytes ias_signature = 3;</code>
   */
  public boolean hasIasSignature() {
    return ((bitField0_ & 0x00000004) == 0x00000004);
  }
  /**
   * <code>required bytes ias_signature = 3;</code>
   */
  public com.google.protobuf.ByteString getIasSignature() {
    return iasSignature_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    if (!hasIasResponse()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasIasCertificate()) {
      memoizedIsInitialized = 0;
      return false;
    }
    if (!hasIasSignature()) {
      memoizedIsInitialized = 0;
      return false;
    }
    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      output.writeBytes(1, iasResponse_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, iasCertificate_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      output.writeBytes(3, iasSignature_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) == 0x00000001)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(1, iasResponse_);
    }
    if (((bitField0_ & 0x00000002) == 0x00000002)) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, iasCertificate_);
    }
    if (((bitField0_ & 0x00000004) == 0x00000004)) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(3, iasSignature_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.r3.sgx.enclavelethost.grpc.EpidAttestation)) {
      return super.equals(obj);
    }
    com.r3.sgx.enclavelethost.grpc.EpidAttestation other = (com.r3.sgx.enclavelethost.grpc.EpidAttestation) obj;

    boolean result = true;
    result = result && (hasIasResponse() == other.hasIasResponse());
    if (hasIasResponse()) {
      result = result && getIasResponse()
          .equals(other.getIasResponse());
    }
    result = result && (hasIasCertificate() == other.hasIasCertificate());
    if (hasIasCertificate()) {
      result = result && getIasCertificate()
          .equals(other.getIasCertificate());
    }
    result = result && (hasIasSignature() == other.hasIasSignature());
    if (hasIasSignature()) {
      result = result && getIasSignature()
          .equals(other.getIasSignature());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasIasResponse()) {
      hash = (37 * hash) + IAS_RESPONSE_FIELD_NUMBER;
      hash = (53 * hash) + getIasResponse().hashCode();
    }
    if (hasIasCertificate()) {
      hash = (37 * hash) + IAS_CERTIFICATE_FIELD_NUMBER;
      hash = (53 * hash) + getIasCertificate().hashCode();
    }
    if (hasIasSignature()) {
      hash = (37 * hash) + IAS_SIGNATURE_FIELD_NUMBER;
      hash = (53 * hash) + getIasSignature().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.r3.sgx.enclavelethost.grpc.EpidAttestation parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.r3.sgx.enclavelethost.grpc.EpidAttestation parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.r3.sgx.enclavelethost.grpc.EpidAttestation parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.r3.sgx.enclavelethost.grpc.EpidAttestation parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.r3.sgx.enclavelethost.grpc.EpidAttestation parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.r3.sgx.enclavelethost.grpc.EpidAttestation parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.r3.sgx.enclavelethost.grpc.EpidAttestation parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.r3.sgx.enclavelethost.grpc.EpidAttestation parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.r3.sgx.enclavelethost.grpc.EpidAttestation parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.r3.sgx.enclavelethost.grpc.EpidAttestation parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.r3.sgx.enclavelethost.grpc.EpidAttestation parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.r3.sgx.enclavelethost.grpc.EpidAttestation parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.r3.sgx.enclavelethost.grpc.EpidAttestation prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code proto.EpidAttestation}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:proto.EpidAttestation)
      com.r3.sgx.enclavelethost.grpc.EpidAttestationOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.r3.sgx.enclavelethost.grpc.EnclaveletHostApi.internal_static_proto_EpidAttestation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.r3.sgx.enclavelethost.grpc.EnclaveletHostApi.internal_static_proto_EpidAttestation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.r3.sgx.enclavelethost.grpc.EpidAttestation.class, com.r3.sgx.enclavelethost.grpc.EpidAttestation.Builder.class);
    }

    // Construct using com.r3.sgx.enclavelethost.grpc.EpidAttestation.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      iasResponse_ = com.google.protobuf.ByteString.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      iasCertificate_ = "";
      bitField0_ = (bitField0_ & ~0x00000002);
      iasSignature_ = com.google.protobuf.ByteString.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.r3.sgx.enclavelethost.grpc.EnclaveletHostApi.internal_static_proto_EpidAttestation_descriptor;
    }

    public com.r3.sgx.enclavelethost.grpc.EpidAttestation getDefaultInstanceForType() {
      return com.r3.sgx.enclavelethost.grpc.EpidAttestation.getDefaultInstance();
    }

    public com.r3.sgx.enclavelethost.grpc.EpidAttestation build() {
      com.r3.sgx.enclavelethost.grpc.EpidAttestation result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.r3.sgx.enclavelethost.grpc.EpidAttestation buildPartial() {
      com.r3.sgx.enclavelethost.grpc.EpidAttestation result = new com.r3.sgx.enclavelethost.grpc.EpidAttestation(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
        to_bitField0_ |= 0x00000001;
      }
      result.iasResponse_ = iasResponse_;
      if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
        to_bitField0_ |= 0x00000002;
      }
      result.iasCertificate_ = iasCertificate_;
      if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
        to_bitField0_ |= 0x00000004;
      }
      result.iasSignature_ = iasSignature_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.r3.sgx.enclavelethost.grpc.EpidAttestation) {
        return mergeFrom((com.r3.sgx.enclavelethost.grpc.EpidAttestation)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.r3.sgx.enclavelethost.grpc.EpidAttestation other) {
      if (other == com.r3.sgx.enclavelethost.grpc.EpidAttestation.getDefaultInstance()) return this;
      if (other.hasIasResponse()) {
        setIasResponse(other.getIasResponse());
      }
      if (other.hasIasCertificate()) {
        bitField0_ |= 0x00000002;
        iasCertificate_ = other.iasCertificate_;
        onChanged();
      }
      if (other.hasIasSignature()) {
        setIasSignature(other.getIasSignature());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      if (!hasIasResponse()) {
        return false;
      }
      if (!hasIasCertificate()) {
        return false;
      }
      if (!hasIasSignature()) {
        return false;
      }
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.r3.sgx.enclavelethost.grpc.EpidAttestation parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.r3.sgx.enclavelethost.grpc.EpidAttestation) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.ByteString iasResponse_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>required bytes ias_response = 1;</code>
     */
    public boolean hasIasResponse() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required bytes ias_response = 1;</code>
     */
    public com.google.protobuf.ByteString getIasResponse() {
      return iasResponse_;
    }
    /**
     * <code>required bytes ias_response = 1;</code>
     */
    public Builder setIasResponse(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      iasResponse_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required bytes ias_response = 1;</code>
     */
    public Builder clearIasResponse() {
      bitField0_ = (bitField0_ & ~0x00000001);
      iasResponse_ = getDefaultInstance().getIasResponse();
      onChanged();
      return this;
    }

    private java.lang.Object iasCertificate_ = "";
    /**
     * <code>required string ias_certificate = 2;</code>
     */
    public boolean hasIasCertificate() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string ias_certificate = 2;</code>
     */
    public java.lang.String getIasCertificate() {
      java.lang.Object ref = iasCertificate_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          iasCertificate_ = s;
        }
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>required string ias_certificate = 2;</code>
     */
    public com.google.protobuf.ByteString
        getIasCertificateBytes() {
      java.lang.Object ref = iasCertificate_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iasCertificate_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>required string ias_certificate = 2;</code>
     */
    public Builder setIasCertificate(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      iasCertificate_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required string ias_certificate = 2;</code>
     */
    public Builder clearIasCertificate() {
      bitField0_ = (bitField0_ & ~0x00000002);
      iasCertificate_ = getDefaultInstance().getIasCertificate();
      onChanged();
      return this;
    }
    /**
     * <code>required string ias_certificate = 2;</code>
     */
    public Builder setIasCertificateBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
      iasCertificate_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString iasSignature_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>required bytes ias_signature = 3;</code>
     */
    public boolean hasIasSignature() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required bytes ias_signature = 3;</code>
     */
    public com.google.protobuf.ByteString getIasSignature() {
      return iasSignature_;
    }
    /**
     * <code>required bytes ias_signature = 3;</code>
     */
    public Builder setIasSignature(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
      iasSignature_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>required bytes ias_signature = 3;</code>
     */
    public Builder clearIasSignature() {
      bitField0_ = (bitField0_ & ~0x00000004);
      iasSignature_ = getDefaultInstance().getIasSignature();
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:proto.EpidAttestation)
  }

  // @@protoc_insertion_point(class_scope:proto.EpidAttestation)
  private static final com.r3.sgx.enclavelethost.grpc.EpidAttestation DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.r3.sgx.enclavelethost.grpc.EpidAttestation();
  }

  public static com.r3.sgx.enclavelethost.grpc.EpidAttestation getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  @java.lang.Deprecated public static final com.google.protobuf.Parser<EpidAttestation>
      PARSER = new com.google.protobuf.AbstractParser<EpidAttestation>() {
    public EpidAttestation parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new EpidAttestation(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<EpidAttestation> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<EpidAttestation> getParserForType() {
    return PARSER;
  }

  public com.r3.sgx.enclavelethost.grpc.EpidAttestation getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

