plugins {
    id "org.jetbrains.kotlin.jvm"
    id "com.github.johnrengelman.shadow"
    id "application"
}

apply from: "../versions.gradle"

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "info.picocli:picocli:$picocli_version"

    testImplementation "org.junit.jupiter:junit-jupiter:$junit_jupiter_version"
}

// Zip up the template directory and gradle wrapper and add it as a java resource
task packageTemplate(type: Zip) {
    archiveFileName = "template.zip"
    destinationDirectory = file("$buildDir/resources/main")

    from "$projectDir/template"
}
task packageGradleWrapper(type: Zip) {
    archiveFileName = "gradle-wrapper.zip"
    destinationDirectory = file("$buildDir/resources/main")

    from "$rootDir"
    include(
            "gradle/wrapper/gradle-wrapper.jar",
            "gradle/wrapper/gradle-wrapper.properties",
            "gradlew",
            "gradlew.bat"
    )
}
// If packaging more things, make sure to update the test depenency below
tasks.shadowJar.dependsOn(packageTemplate, packageGradleWrapper)

application {
    mainClass = 'com.r3.conclave.init.cli.MainKt'
}

shadowJar {
    mainClassName = application.mainClassName
    // Note: The task `sdkCopyConclaveInit` in the root project depends on this archiveFileName
    archiveFileName = "conclave-init-shadow.jar"
}

tasks.withType(Test) {
    dependsOn(packageTemplate, packageGradleWrapper)
    testLogging {
        events "passed", "skipped", "failed"
    }
}