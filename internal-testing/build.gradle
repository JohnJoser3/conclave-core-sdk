plugins {
    id 'org.jetbrains.kotlin.jvm'
}

dependencies {
    api project(":conclave-testing")

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    implementation "org.assertj:assertj-core:$assertj_version"
    implementation "javax.xml.bind:jaxb-api:2.3.1"

    runtimeOnly "org.glassfish.jaxb:jaxb-runtime:2.3.1"
    runtimeOnly "com.r3.conclave:native-enclave-simulation:${rootProject.version}"
    runtimeOnly "com.r3.conclave:native-enclave-debug:${rootProject.version}"
    runtimeOnly "com.r3.conclave:native-enclave-release:${rootProject.version}"
    runtimeOnly "com.r3.conclave:native-sign-tool:${rootProject.version}"
    runtimeOnly "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
}

// Include the conclave-enclave fat jar to speed up the generation of the dynamic test enclaves.
processResources {
    with copySpec {
        from project(":conclave-enclave").fatJar
        into "com/r3/conclave/internaltesting/dynamic"
        rename { "conclave-enclave-fat.jar" }
    }
}
