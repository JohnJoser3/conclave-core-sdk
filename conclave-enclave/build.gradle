plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm'
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

dependencies {
    api project(":conclave-common")

    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    implementation "org.graalvm.sdk:graal-sdk:$graal_version"
    testImplementation project(":internal-testing")
    testImplementation "org.assertj:assertj-core:$assertj_version"
    testImplementation "org.junit.jupiter:junit-jupiter:$junit_jupiter_version"
    // ASM: byte code manipulation library
    testImplementation "org.ow2.asm:asm:$asm_version"
    testImplementation "org.mockito:mockito-inline:$mockito_version"
}

// This task is needed by :internal-testing for quickly generating dynamic test enclaves. Normally the shadowJar task
// does exactly what we want here but it's been configured to shade Kotlin and Jackson instead.
task fatJar(type: ShadowJar) {
    archiveClassifier = 'fatjar'
    from sourceSets.main.output
    configurations = [
            project.configurations.runtimeClasspath,
            project(":conclave-common").configurations.compileClasspath
    ]
}
