import static org.gradle.api.JavaVersion.*

version = conclave_version

subprojects {
    group = "com.r3.conclave"
    version = rootProject.version

    ext.conclave_spid = '***REMOVED***'
    ext.attestation_key = '***REMOVED***'

    tasks.withType(JavaCompile) {
        sourceCompatibility = VERSION_1_8
        targetCompatibility = VERSION_1_8
        options.encoding = 'UTF-8'
    }

    tasks.withType(AbstractCompile) {
        // This is a bit ugly, but Gradle isn't recognising the KotlinCompile task
        // as it does the built-in JavaCompile task.
        if (it.class.name.startsWith('org.jetbrains.kotlin.gradle.tasks.KotlinCompile')) {
            kotlinOptions {
                jvmTarget = VERSION_1_8
                apiVersion = '1.4'
                languageVersion = '1.4'
            }
        }
    }

    tasks.withType(Test) {
        useJUnitPlatform()

        systemProperty 'java.io.tmpdir', buildDir.absolutePath
        systemProperty 'conclave.spid', conclave_spid
        systemProperty 'conclave.attestation-key', attestation_key

        failFast = true
        testLogging {
            exceptionFormat = 'full'
            showStandardStreams = true
        }

        beforeTest { descriptor ->
            logger.lifecycle("Starting> {}.{} ({})", descriptor.classDisplayName, descriptor.displayName, descriptor.id)
        }
        afterTest { descriptor ->
            logger.lifecycle("Ending> {}.{} ({})", descriptor.classDisplayName, descriptor.displayName, descriptor.id)
        }
    }
}

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}
